//  Copyright 2011 Itty Bitty Apps Pty. Ltd. All rights reserved.

// Always run the Static Analyzer with each build (increases build times but worth while).
RUN_CLANG_STATIC_ANALYZER = YES

CLANG_ANALYZER_DEADCODE_DEADSTORES = YES
CLANG_ANALYZER_OBJC_SELF_INIT = YES

// All warnings should be treated as errors.
GCC_TREAT_WARNINGS_AS_ERRORS = YES
GCC_TREAT_INCOMPATIBLE_POINTER_TYPE_WARNINGS_AS_ERRORS = YES
GCC_TREAT_IMPLICIT_FUNCTION_DECLARATIONS_AS_ERRORS = YES

// Increase the strictness of warning.
GCC_WARN_FOUR_CHARACTER_CONSTANTS = YES
GCC_WARN_64_TO_32_BIT_CONVERSION = YES
GCC_WARN_ALLOW_INCOMPLETE_PROTOCOL = YES
GCC_WARN_INITIALIZER_NOT_FULLY_BRACKETED = YES
GCC_WARN_ABOUT_RETURN_TYPE = YES
GCC_WARN_MISSING_PARENTHESES = YES
GCC_WARN_ABOUT_MISSING_FIELD_INITIALIZERS = YES
GCC_WARN_ABOUT_MISSING_PROTOTYPES = YES
GCC_WARN_ABOUT_MISSING_NEWLINE = YES
GCC_WARN_NON_VIRTUAL_DESTRUCTOR = YES
GCC_WARN_HIDDEN_VIRTUAL_FUNCTIONS = YES
GCC_WARN_ABOUT_POINTER_SIGNEDNESS = YES
GCC_WARN_SIGN_COMPARE = YES
GCC_WARN_TYPECHECK_CALLS_TO_PRINTF = YES
GCC_WARN_UNUSED_LABEL = YES
GCC_WARN_UNUSED_VALUE = YES
GCC_WARN_UNUSED_VARIABLE = YES
GCC_WARN_ABOUT_DEPRECATED_FUNCTIONS = YES
GCC_WARN_ABOUT_INVALID_OFFSETOF_MACRO = YES
GCC_WARN_CHECK_SWITCH_STATEMENTS = YES
GCC_WARN_SHADOW = YES
GCC_WARN_UNINITIALIZED_AUTOS = YES
GCC_WARN_STRICT_SELECTOR_MATCH = YES
GCC_WARN_UNDECLARED_SELECTOR = YES
GCC_WARN_UNKNOWN_PRAGMAS = YES
GCC_WARN_UNUSED_FUNCTION = YES
GCC_WARN_UNUSED_PARAMETER = YES


// Unfortunately this warning tends to generate false positives.  Not sure why.  Therefore we turn it off.
GCC_WARN_MULTIPLE_DEFINITION_TYPES_FOR_SELECTOR = NO

// These options duplicate a couple above but they are only available in Xcode 4.2 with LLVM 3.0.
CLANG_WARN_CXX0X_EXTENSIONS = YES
CLANG_WARN_IMPLICIT_SIGN_CONVERSION = YES
CLANG_WARN_OBJCPP_ARC_ABI = YES
CLANG_WARN_OBJC_IMPLICIT_ATOMIC_PROPERTIES = YES
CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES
CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION = YES

// Additional warning flags that arn't covered by the GCC_WARN options
// See http://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html for details on these options.
WARNING_CFLAGS = -Wall -Wextra -Wunused -Wconversion -Wsign-conversion -Wfloat-equal -Wundef -Wc++-compat -Wstrict-prototypes -Wnested-externs -Wwrite-strings

// Turn off color diagnostics by default (disable this for commandline builds for better looking output - Jenkins can use the color if the ANSI logfile parsing plugin is enabled)
COLOR_DIAGNOSTICS=no-

// Turn on other Clang compiler flags (mainly for diagnostics formatting)
DIAGNOSTICS_OTHER_CFLAGS = -fshow-source-location -fcaret-diagnostics -fdiagnostics-show-option -fdiagnostics-print-source-range-info -fdiagnostics-fixit-info -fdiagnostics-parseable-fixits -f$(COLOR_DIAGNOSTICS)color-diagnostics
